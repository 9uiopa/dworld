spring:
  jpa:
    show-sql: true # 쿼리 확인
    defer-datasource-initialization: true #  데이터베이스 초기화 스크립트가 JPA 엔티티 설정이 완료된 후에 실행되도록
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: update # 로컬 db 스키마를 JPA 엔티티와 일치하도록 생성하거나 수정해준다.

  datasource:
    url: jdbc:mysql://db:3306/${MYSQL_DATABASE} # 'db'는 컨테이너 이름. 로컬 db를 쓸 때는 localhost
    username: ${MYSQL_USER} # docker-compose에 정의된 docker 환경변수
    password: ${MYSQL_PASSWORD}

  elasticsearch:
    uris: http://elasticsearch:9200

  # 앱 실행시 sql 실행(data,schema.sql)
  sql:
    init:
      mode: always

logging:
  level:
    org:
      springframework:
        security: DEBUG
        data:
          elasticsearch: DEBUG
      elasticsearch:
        client: DEBUG